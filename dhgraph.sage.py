

# This file was *autogenerated* from the file dhgraph.sage
from sage.all_cmdline import *   # import sage library

_sage_const_52 = Integer(52); _sage_const_50 = Integer(50); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_5 = Integer(5); _sage_const_7 = Integer(7); _sage_const_11 = Integer(11); _sage_const_13 = Integer(13); _sage_const_300 = Integer(300)
d = DiGraph(loops=True, multiedges=True, sparse=True)

q = next_prime(_sage_const_52 )
F = Zmod(next_prime(_sage_const_50 )); E=EllipticCurve(F, [_sage_const_0 ,_sage_const_1 ])

for p in [_sage_const_5 ,_sage_const_7 ,_sage_const_11 ,_sage_const_13 ]:
    powset = {g}
    oldh = g
    h = p*g
    d.add_edge((oldh, h, str(p)))

    while h not in powset:
        powset.add(h)
        oldh = h
        h = p*h
        d.add_edge((oldh, h, str(p)))

randpos = {v :(randint(_sage_const_0 ,_sage_const_300 ),randint(_sage_const_0 ,_sage_const_300 )) for v in d.vertices()}

d.set_pos(randpos)

GP = d.graphplot(vertex_size=_sage_const_50 ,vertex_labels=False,color_by_label=True, edge_style='dashed')

d.set_pos(randpos)
GP.set_edges(edge_style='solid')
GP.plot()


